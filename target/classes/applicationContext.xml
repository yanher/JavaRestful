
<beans xmlns="http://www.springframework.org/schema/beans" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:context="http://www.springframework.org/schema/context"
  xmlns:aop="http://www.springframework.org/schema/aop" xmlns:tx="http://www.springframework.org/schema/tx"
  xsi:schemaLocation="  
            http://www.springframework.org/schema/beans  
            http://www.springframework.org/schema/beans/spring-beans-2.5.xsd  
            http://www.springframework.org/schema/context   
            http://www.springframework.org/schema/context/spring-context-2.5.xsd  
            http://www.springframework.org/schema/aop   
            http://www.springframework.org/schema/aop/spring-aop-2.5.xsd  
            http://www.springframework.org/schema/tx   
            http://www.springframework.org/schema/tx/spring-tx-2.5.xsd">
            
  
  
  <!-- <context:annotation-config/>  -->         
  <!-- <bean id="firstServletImpl" class="com.springjpa.servlet.servletImpl.FirstServletImpl">
       </bean> -->

  <!-- <bean id="firstServlet" class="com.springjpa.servlet.FirstServlet" /> -->
  <!-- 应用于JAVAEE服务器的JNDI数据源 -->
  <!-- <jee:jndi-lookup id="entityManagerFactory"  jndi-name="persistence/persistenceUnit"/> -->
  
  <bean id="entityManagerFactory" class="org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean">
    <property name="dataSource" ref="dataSource" />
    <property name="persistenceUnitName" value="openjpa-unit" />
    <property name="persistenceXmlLocation" value="classpath:META-INF/persistence.xml" />
    <property name="packagesToScan" value="com.springjpa.beans"/>
    <property name="jpaVendorAdapter">
      <bean class="org.springframework.orm.jpa.vendor.OpenJpaVendorAdapter">
        <property name="showSql" value="true" />
        <property name="generateDdl" value="true" />
        <property name="databasePlatform" value="org.apache.openjpa.jdbc.sql.MySQLDictionary" />
      </bean>
      <!-- <bean class="org.springframework.orm.jpa.vendor.HibernateJpaVendorAdapter"> 
              <property name="showSql" value="true" /> 
              <property name="databasePlatform" value="org.hibernate.dialect.MySQLDialect" /> 
           </bean> -->
    </property>
    <property name="loadTimeWeaver">
      <bean class="org.springframework.instrument.classloading.ReflectiveLoadTimeWeaver" />
    </property>
    <!-- <property name="jpaDialect" ref="jpaDialect"/>
    <property name="jpaPropertyMap" ref="jpaPropertyMap"/> -->
  </bean>
  <bean id="jpaDialect" class="org.springframework.orm.jpa.vendor.OpenJpaDialect"/>

  <bean id="transactionManager" class="org.springframework.orm.jpa.JpaTransactionManager" lazy-init="true">
    <property name="entityManagerFactory" ref="entityManagerFactory" />
  </bean>

  <tx:advice id="transactionAdvice" transaction-manager="transactionManager">
    <tx:attributes>
      <tx:method name="insert" propagation="REQUIRED" />
      <tx:method name="read*" read-only="true" />
      <tx:method name="list*" read-only="true" />
      <tx:method name="find*" read-only="true" />
      <tx:method name="load*" read-only="true" />
      <tx:method name="queryAll" propagation="REQUIRED" />   
    </tx:attributes>
  </tx:advice>
  <tx:annotation-driven transaction-manager="transactionManager" />
  <!-- <aop:config>
    <aop:pointcut id="businessService" expression="execution(* com.springjpa.servlet.servletImpl.*.*(..))" />
    <aop:advisor advice-ref="transactionAdvice" pointcut-ref="businessService" />
  </aop:config> -->
  
  <!-- 已经使用 packagesToScan 扫描  -->
  <context:component-scan base-package="com.springjpa.servlet" />
  <context:component-scan base-package="com.springjpa.services" />
  <context:component-scan base-package="com.springjpa.dao" />
  <context:property-placeholder location="classpath:jdbc.properties" />
  <bean id="dataSource" class="org.apache.commons.dbcp.BasicDataSource" destroy-method="close">
    <property name="driverClassName" value="${jdbc.driverClassName}" />
    <property name="url" value="${jdbc.url}" />
    <property name="username" value="${jdbc.username}" />
    <property name="password" value="${jdbc.password}" />
    <!-- Connection Pooling Info -->
    <!-- <property name="maxActive" value="${dbcp.maxActive}" /> -->
    <!-- <property name="maxIdle" value="${dbcp.maxIdle}" /> -->
    <property name="defaultAutoCommit" value="false" />
    <!-- 连接Idle一个小时后超时 -->
    <property name="timeBetweenEvictionRunsMillis" value="3600000" />
    <property name="minEvictableIdleTimeMillis" value="3600000" />
  </bean>
</beans>  